---
kind: ConfigMap
apiVersion: v1
metadata:
  name: auth-config
  namespace: dummy-crm-namespace
data:
  #AUTH_ACCESSTOKEN_URL: https://erp.mydomain.com/oauth/accessToken
  AUTH_ACCESSTOKEN_URL: http://dummy-corp-auth-rust-app.dummy-corp-erp-namespace:8080/accessToken
  AUTH_PROFILE_URL: http://dummy-corp-auth-rust-app.dummy-corp-erp-namespace:8080/profile
  ISSUE_CREATE_URL: http://go-redmine-ish-golang-service.go-redmine-ish:8080/issue
  ISSUE_DEFAULT_PROJECT_ID: "2"
  ISSUE_DEFAULT_TRACKER_ID: "4"
  CLIENT_ID: CRM
  REDIRECT_URI: https://crm.mydomain.com/authback/?code=
  AUTH_REDIS_TTL: "120"
  CORP_SERVICE_USERDATA_URL: http://dummy-corp-erp-golang-app-service.dummy-corp-erp-namespace:8080
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: redis-config
  namespace: dummy-crm-namespace
data:
  REDIS_SERVICE: redis
  REDIS_PORT: "6379"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dummy-crm-rust-app
  namespace: dummy-crm-namespace
spec:
  revisionHistoryLimit: 2
  replicas: 1
  selector:
    matchLabels:
      app: dummy-crm-rust-app
  template:
    metadata:
      labels:
        app: dummy-crm-rust-app
    spec:
      containers:
      - name: dummy-crm-rust-app
        image: localhost:32000/dummy-crm-rust-app:latest  # Usar la imagen de tu registro local
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: auth-config  # Referencia al ConfigMap
        - configMapRef:
            name: postgres-config  # Referencia al ConfigMap
        - configMapRef:
            name: redis-config  # Referencia al ConfigMap
        env:
        - name: CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: auth-secret  # Nombre del secret
              key: CLIENT_SECRET  # Clave del secret        
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret  # Nombre del secret
              key: REDIS_PASSWORD  # Clave del secret
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 32Mi
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080  